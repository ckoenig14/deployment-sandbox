<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <constant>
        <name>AUG_TIPS_WORKER_REPORT</name>
        <uuid>_a-0000dcb6-074e-8000-b475-010000010000_4018</uuid>
        <description>DESIGN TIP: In certain use cases, a user group can work directly from the record listview and record dashboards effectively. Other times, a worker dashboard can serve as a landing page for a user base. After finding out how a user group works and what information they are interested in, provide them a page that streamlines that important information in one place. This can include multiple task reports, data grids, charts, action links, etc. </description>
        <parentUuid>_a-0000dcac-e5ea-8000-b475-010000010000_3778</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <typedValue>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value>DESIGN TIP: In certain use cases, a user group can work directly from the record listview and record dashboards effectively. Other times, a worker dashboard can serve as a landing page for a user base. After finding out how a user group works and what information they are interested in, provide them a page that streamlines that important information in one place. This can include multiple task reports, data grids, charts, action links, etc. </value>
        </typedValue>
    </constant>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul> 